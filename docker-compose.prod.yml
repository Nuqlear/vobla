version: '3'
services:
  backend:
    command: ["bash", "./wait-for-postgres.sh", "python manage.py --migrate runserver"]
    volumes:
      - ./wait-for-postgres.sh:/wait-for-postgres.sh
      - ./volumes/vobla:/var/vobla
    environment:
      - ENV=prod
  backend-worker:
    build: backend
    command: ["python", "manage.py", "runworker"]
    image: nuqlya/vobla-api:latest
    volumes:
      - ./volumes/vobla:/var/vobla
    depends_on:
      - redis
    environment:
      - TORNADO_SECRET_KEY=${TORNADO_SECRET_KEY}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_DB=${POSTGRES_DB}
      - CELERY_BROKER_URL=${CELERY_BROKER_URL}
      - CELERY_RESULT_BACKEND=${CELERY_RESULT_BACKEND}
      - ENV=prod
  postgres:
    volumes:
      - ./volumes/postgres/var/lib/postgresql/data:/var/lib/postgresql/data
  frontend:
    build: frontend
    image: nuqlya/vobla-frontend:latest
    command: npm run build
    environment:
      - NODE_ENV=production
    depends_on:
      - backend
    volumes:
      - ./frontend/dist:/dist
  swagger:
    image: swaggerapi/swagger-ui
    depends_on:
      - backend
    environment:
      - API_URL=https://vobla.olegshigor.in/api/open_api2.json
    ports:
      - ${VOBLA_SWAGGER_PORT}:8080
